/*
 * @license
 * Copyright Akveo. All Rights Reserved.
 * Licensed under the MIT License. See License.txt in the project root for license information.
 */
import { NgModule } from '@angular/core';
import { NB_DATE_SERVICE_OPTIONS, NbDateService } from '@nebular/theme';
import { NbDateFnsDateService } from './services/date-fns-date.service';
import * as i0 from "@angular/core";
const dateFnsServiceProvider = { provide: NbDateService, useClass: NbDateFnsDateService };
export class NbDateFnsDateModule {
    static forRoot(options) {
        return {
            ngModule: NbDateFnsDateModule,
            providers: [
                dateFnsServiceProvider,
                { provide: NB_DATE_SERVICE_OPTIONS, useValue: options },
            ],
        };
    }
    static forChild(options) {
        return {
            ngModule: NbDateFnsDateModule,
            providers: [
                dateFnsServiceProvider,
                { provide: NB_DATE_SERVICE_OPTIONS, useValue: options },
            ],
        };
    }
}
NbDateFnsDateModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "15.2.4", ngImport: i0, type: NbDateFnsDateModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
NbDateFnsDateModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "14.0.0", version: "15.2.4", ngImport: i0, type: NbDateFnsDateModule });
NbDateFnsDateModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "15.2.4", ngImport: i0, type: NbDateFnsDateModule, providers: [dateFnsServiceProvider] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "15.2.4", ngImport: i0, type: NbDateFnsDateModule, decorators: [{
            type: NgModule,
            args: [{
                    providers: [dateFnsServiceProvider],
                }]
        }] });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGF0ZS1mbnMubW9kdWxlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL2ZyYW1ld29yay9kYXRlLWZucy9kYXRlLWZucy5tb2R1bGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7R0FJRztBQUVILE9BQU8sRUFBdUIsUUFBUSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBRTlELE9BQU8sRUFBRSx1QkFBdUIsRUFBRSxhQUFhLEVBQUUsTUFBTSxnQkFBZ0IsQ0FBQztBQUN4RSxPQUFPLEVBQW9CLG9CQUFvQixFQUFFLE1BQU0sa0NBQWtDLENBQUM7O0FBRTFGLE1BQU0sc0JBQXNCLEdBQUcsRUFBRSxPQUFPLEVBQUUsYUFBYSxFQUFFLFFBQVEsRUFBRSxvQkFBb0IsRUFBRSxDQUFDO0FBSzFGLE1BQU0sT0FBTyxtQkFBbUI7SUFDOUIsTUFBTSxDQUFDLE9BQU8sQ0FBQyxPQUFrQztRQUMvQyxPQUFPO1lBQ0wsUUFBUSxFQUFFLG1CQUFtQjtZQUM3QixTQUFTLEVBQUU7Z0JBQ1Qsc0JBQXNCO2dCQUN0QixFQUFFLE9BQU8sRUFBRSx1QkFBdUIsRUFBRSxRQUFRLEVBQUUsT0FBTyxFQUFFO2FBQ3hEO1NBQ0YsQ0FBQztJQUNKLENBQUM7SUFFRCxNQUFNLENBQUMsUUFBUSxDQUFDLE9BQWtDO1FBQ2hELE9BQU87WUFDTCxRQUFRLEVBQUUsbUJBQW1CO1lBQzdCLFNBQVMsRUFBRTtnQkFDVCxzQkFBc0I7Z0JBQ3RCLEVBQUUsT0FBTyxFQUFFLHVCQUF1QixFQUFFLFFBQVEsRUFBRSxPQUFPLEVBQUU7YUFDeEQ7U0FDRixDQUFDO0lBQ0osQ0FBQzs7Z0hBbkJVLG1CQUFtQjtpSEFBbkIsbUJBQW1CO2lIQUFuQixtQkFBbUIsYUFGbkIsQ0FBRSxzQkFBc0IsQ0FBRTsyRkFFMUIsbUJBQW1CO2tCQUgvQixRQUFRO21CQUFDO29CQUNSLFNBQVMsRUFBRSxDQUFFLHNCQUFzQixDQUFFO2lCQUN0QyIsInNvdXJjZXNDb250ZW50IjpbIi8qXG4gKiBAbGljZW5zZVxuICogQ29weXJpZ2h0IEFrdmVvLiBBbGwgUmlnaHRzIFJlc2VydmVkLlxuICogTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBMaWNlbnNlLiBTZWUgTGljZW5zZS50eHQgaW4gdGhlIHByb2plY3Qgcm9vdCBmb3IgbGljZW5zZSBpbmZvcm1hdGlvbi5cbiAqL1xuXG5pbXBvcnQgeyBNb2R1bGVXaXRoUHJvdmlkZXJzLCBOZ01vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuXG5pbXBvcnQgeyBOQl9EQVRFX1NFUlZJQ0VfT1BUSU9OUywgTmJEYXRlU2VydmljZSB9IGZyb20gJ0BuZWJ1bGFyL3RoZW1lJztcbmltcG9ydCB7IE5iRGF0ZUZuc09wdGlvbnMsIE5iRGF0ZUZuc0RhdGVTZXJ2aWNlIH0gZnJvbSAnLi9zZXJ2aWNlcy9kYXRlLWZucy1kYXRlLnNlcnZpY2UnO1xuXG5jb25zdCBkYXRlRm5zU2VydmljZVByb3ZpZGVyID0geyBwcm92aWRlOiBOYkRhdGVTZXJ2aWNlLCB1c2VDbGFzczogTmJEYXRlRm5zRGF0ZVNlcnZpY2UgfTtcblxuQE5nTW9kdWxlKHtcbiAgcHJvdmlkZXJzOiBbIGRhdGVGbnNTZXJ2aWNlUHJvdmlkZXIgXSxcbn0pXG5leHBvcnQgY2xhc3MgTmJEYXRlRm5zRGF0ZU1vZHVsZSB7XG4gIHN0YXRpYyBmb3JSb290KG9wdGlvbnM6IFBhcnRpYWw8TmJEYXRlRm5zT3B0aW9ucz4pOiBNb2R1bGVXaXRoUHJvdmlkZXJzPE5iRGF0ZUZuc0RhdGVNb2R1bGU+IHtcbiAgICByZXR1cm4ge1xuICAgICAgbmdNb2R1bGU6IE5iRGF0ZUZuc0RhdGVNb2R1bGUsXG4gICAgICBwcm92aWRlcnM6IFtcbiAgICAgICAgZGF0ZUZuc1NlcnZpY2VQcm92aWRlcixcbiAgICAgICAgeyBwcm92aWRlOiBOQl9EQVRFX1NFUlZJQ0VfT1BUSU9OUywgdXNlVmFsdWU6IG9wdGlvbnMgfSxcbiAgICAgIF0sXG4gICAgfTtcbiAgfVxuXG4gIHN0YXRpYyBmb3JDaGlsZChvcHRpb25zOiBQYXJ0aWFsPE5iRGF0ZUZuc09wdGlvbnM+KTogTW9kdWxlV2l0aFByb3ZpZGVyczxOYkRhdGVGbnNEYXRlTW9kdWxlPiB7XG4gICAgcmV0dXJuIHtcbiAgICAgIG5nTW9kdWxlOiBOYkRhdGVGbnNEYXRlTW9kdWxlLFxuICAgICAgcHJvdmlkZXJzOiBbXG4gICAgICAgIGRhdGVGbnNTZXJ2aWNlUHJvdmlkZXIsXG4gICAgICAgIHsgcHJvdmlkZTogTkJfREFURV9TRVJWSUNFX09QVElPTlMsIHVzZVZhbHVlOiBvcHRpb25zIH0sXG4gICAgICBdLFxuICAgIH07XG4gIH1cbn1cbiJdfQ==