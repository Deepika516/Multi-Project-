/*
 * @license
 * Copyright Akveo. All Rights Reserved.
 * Licensed under the MIT License. See License.txt in the project root for license information.
 */
import { Inject, Injectable, LOCALE_ID, Optional } from '@angular/core';
import { NB_DATE_SERVICE_OPTIONS, NbNativeDateService } from '@nebular/theme';
import { default as parse } from 'date-fns/parse';
import { default as formatDate } from 'date-fns/format';
import { default as getWeek } from 'date-fns/getWeek';
import * as i0 from "@angular/core";
export class NbDateFnsDateService extends NbNativeDateService {
    constructor(locale, options) {
        super(locale);
        this.options = options || {};
    }
    format(date, format) {
        if (date) {
            return formatDate(date, format || this.options.format, this.options.formatOptions);
        }
        return '';
    }
    parse(date, format) {
        return parse(date, format || this.options.format, new Date(), this.options.parseOptions);
    }
    getId() {
        return 'date-fns';
    }
    getWeekNumber(date) {
        return getWeek(date, this.options.getWeekOptions);
    }
    getDateFormat() {
        return 'YYYY-MM-dd';
    }
}
NbDateFnsDateService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "15.2.4", ngImport: i0, type: NbDateFnsDateService, deps: [{ token: LOCALE_ID }, { token: NB_DATE_SERVICE_OPTIONS, optional: true }], target: i0.ɵɵFactoryTarget.Injectable });
NbDateFnsDateService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: "12.0.0", version: "15.2.4", ngImport: i0, type: NbDateFnsDateService });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "15.2.4", ngImport: i0, type: NbDateFnsDateService, decorators: [{
            type: Injectable
        }], ctorParameters: function () { return [{ type: undefined, decorators: [{
                    type: Inject,
                    args: [LOCALE_ID]
                }] }, { type: undefined, decorators: [{
                    type: Optional
                }, {
                    type: Inject,
                    args: [NB_DATE_SERVICE_OPTIONS]
                }] }]; } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGF0ZS1mbnMtZGF0ZS5zZXJ2aWNlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vc3JjL2ZyYW1ld29yay9kYXRlLWZucy9zZXJ2aWNlcy9kYXRlLWZucy1kYXRlLnNlcnZpY2UudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7R0FJRztBQUVILE9BQU8sRUFBRSxNQUFNLEVBQUUsVUFBVSxFQUFFLFNBQVMsRUFBRSxRQUFRLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFFeEUsT0FBTyxFQUFFLHVCQUF1QixFQUFFLG1CQUFtQixFQUFFLE1BQU0sZ0JBQWdCLENBQUM7QUFFOUUsT0FBTyxFQUFFLE9BQU8sSUFBSSxLQUFLLEVBQUUsTUFBTSxnQkFBZ0IsQ0FBQztBQUNsRCxPQUFPLEVBQUUsT0FBTyxJQUFJLFVBQVUsRUFBRSxNQUFNLGlCQUFpQixDQUFDO0FBQ3hELE9BQU8sRUFBRSxPQUFPLElBQUksT0FBTyxFQUFFLE1BQU0sa0JBQWtCLENBQUM7O0FBVXRELE1BQU0sT0FBTyxvQkFBcUIsU0FBUSxtQkFBbUI7SUFHM0QsWUFDcUIsTUFBYyxFQUNZLE9BQU87UUFFcEQsS0FBSyxDQUFDLE1BQU0sQ0FBQyxDQUFDO1FBQ2QsSUFBSSxDQUFDLE9BQU8sR0FBRyxPQUFPLElBQUksRUFBRSxDQUFDO0lBQy9CLENBQUM7SUFFRCxNQUFNLENBQUMsSUFBVSxFQUFFLE1BQWM7UUFDL0IsSUFBSSxJQUFJLEVBQUU7WUFDUixPQUFPLFVBQVUsQ0FBQyxJQUFJLEVBQUUsTUFBTSxJQUFJLElBQUksQ0FBQyxPQUFPLENBQUMsTUFBTSxFQUFFLElBQUksQ0FBQyxPQUFPLENBQUMsYUFBYSxDQUFDLENBQUM7U0FDcEY7UUFFRCxPQUFPLEVBQUUsQ0FBQztJQUNaLENBQUM7SUFFRCxLQUFLLENBQUMsSUFBWSxFQUFFLE1BQWM7UUFDaEMsT0FBTyxLQUFLLENBQUMsSUFBSSxFQUFFLE1BQU0sSUFBSSxJQUFJLENBQUMsT0FBTyxDQUFDLE1BQU0sRUFBRSxJQUFJLElBQUksRUFBRSxFQUFFLElBQUksQ0FBQyxPQUFPLENBQUMsWUFBWSxDQUFDLENBQUM7SUFDM0YsQ0FBQztJQUVELEtBQUs7UUFDSCxPQUFPLFVBQVUsQ0FBQztJQUNwQixDQUFDO0lBRUQsYUFBYSxDQUFDLElBQVU7UUFDdEIsT0FBTyxPQUFPLENBQUMsSUFBSSxFQUFFLElBQUksQ0FBQyxPQUFPLENBQUMsY0FBYyxDQUFDLENBQUM7SUFDcEQsQ0FBQztJQUVELGFBQWE7UUFDWCxPQUFPLFlBQVksQ0FBQztJQUN0QixDQUFDOztpSEFqQ1Usb0JBQW9CLGtCQUlyQixTQUFTLGFBQ0csdUJBQXVCO3FIQUxsQyxvQkFBb0I7MkZBQXBCLG9CQUFvQjtrQkFEaEMsVUFBVTs7MEJBS04sTUFBTTsyQkFBQyxTQUFTOzswQkFDaEIsUUFBUTs7MEJBQUksTUFBTTsyQkFBQyx1QkFBdUIiLCJzb3VyY2VzQ29udGVudCI6WyIvKlxuICogQGxpY2Vuc2VcbiAqIENvcHlyaWdodCBBa3Zlby4gQWxsIFJpZ2h0cyBSZXNlcnZlZC5cbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgTGljZW5zZS4gU2VlIExpY2Vuc2UudHh0IGluIHRoZSBwcm9qZWN0IHJvb3QgZm9yIGxpY2Vuc2UgaW5mb3JtYXRpb24uXG4gKi9cblxuaW1wb3J0IHsgSW5qZWN0LCBJbmplY3RhYmxlLCBMT0NBTEVfSUQsIE9wdGlvbmFsIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5cbmltcG9ydCB7IE5CX0RBVEVfU0VSVklDRV9PUFRJT05TLCBOYk5hdGl2ZURhdGVTZXJ2aWNlIH0gZnJvbSAnQG5lYnVsYXIvdGhlbWUnO1xuXG5pbXBvcnQgeyBkZWZhdWx0IGFzIHBhcnNlIH0gZnJvbSAnZGF0ZS1mbnMvcGFyc2UnO1xuaW1wb3J0IHsgZGVmYXVsdCBhcyBmb3JtYXREYXRlIH0gZnJvbSAnZGF0ZS1mbnMvZm9ybWF0JztcbmltcG9ydCB7IGRlZmF1bHQgYXMgZ2V0V2VlayB9IGZyb20gJ2RhdGUtZm5zL2dldFdlZWsnO1xuXG5leHBvcnQgaW50ZXJmYWNlIE5iRGF0ZUZuc09wdGlvbnMge1xuICBmb3JtYXQ6IHN0cmluZztcbiAgcGFyc2VPcHRpb25zOiB7fSxcbiAgZm9ybWF0T3B0aW9uczoge30sXG4gIGdldFdlZWtPcHRpb25zOiB7fSxcbn1cblxuQEluamVjdGFibGUoKVxuZXhwb3J0IGNsYXNzIE5iRGF0ZUZuc0RhdGVTZXJ2aWNlIGV4dGVuZHMgTmJOYXRpdmVEYXRlU2VydmljZSB7XG4gIHByb3RlY3RlZCBvcHRpb25zOiBQYXJ0aWFsPE5iRGF0ZUZuc09wdGlvbnM+O1xuXG4gIGNvbnN0cnVjdG9yKFxuICAgIEBJbmplY3QoTE9DQUxFX0lEKSBsb2NhbGU6IHN0cmluZyxcbiAgICBAT3B0aW9uYWwoKSBASW5qZWN0KE5CX0RBVEVfU0VSVklDRV9PUFRJT05TKSBvcHRpb25zLFxuICApIHtcbiAgICBzdXBlcihsb2NhbGUpO1xuICAgIHRoaXMub3B0aW9ucyA9IG9wdGlvbnMgfHwge307XG4gIH1cblxuICBmb3JtYXQoZGF0ZTogRGF0ZSwgZm9ybWF0OiBzdHJpbmcpOiBzdHJpbmcge1xuICAgIGlmIChkYXRlKSB7XG4gICAgICByZXR1cm4gZm9ybWF0RGF0ZShkYXRlLCBmb3JtYXQgfHwgdGhpcy5vcHRpb25zLmZvcm1hdCwgdGhpcy5vcHRpb25zLmZvcm1hdE9wdGlvbnMpO1xuICAgIH1cblxuICAgIHJldHVybiAnJztcbiAgfVxuXG4gIHBhcnNlKGRhdGU6IHN0cmluZywgZm9ybWF0OiBzdHJpbmcpOiBEYXRlIHtcbiAgICByZXR1cm4gcGFyc2UoZGF0ZSwgZm9ybWF0IHx8IHRoaXMub3B0aW9ucy5mb3JtYXQsIG5ldyBEYXRlKCksIHRoaXMub3B0aW9ucy5wYXJzZU9wdGlvbnMpO1xuICB9XG5cbiAgZ2V0SWQoKTogc3RyaW5nIHtcbiAgICByZXR1cm4gJ2RhdGUtZm5zJztcbiAgfVxuXG4gIGdldFdlZWtOdW1iZXIoZGF0ZTogRGF0ZSk6IG51bWJlciB7XG4gICAgcmV0dXJuIGdldFdlZWsoZGF0ZSwgdGhpcy5vcHRpb25zLmdldFdlZWtPcHRpb25zKTtcbiAgfVxuXG4gIGdldERhdGVGb3JtYXQoKTogc3RyaW5nIHtcbiAgICByZXR1cm4gJ1lZWVktTU0tZGQnO1xuICB9XG59XG4iXX0=